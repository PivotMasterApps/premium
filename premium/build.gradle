import java.text.SimpleDateFormat

plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
}

android {
    compileSdk 33

    defaultConfig {
        minSdk 21
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    api "com.android.billingclient:billing:6.0.1"
    api("com.android.billingclient:billing-ktx:6.0.1")

    //ads
    api 'com.google.android.gms:play-services-ads:22.3.0'
    api 'com.facebook.shimmer:shimmer:0.5.0'

    api platform('com.google.firebase:firebase-bom:30.2.0')
    api 'com.google.firebase:firebase-analytics'
    api 'com.google.firebase:firebase-config'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0'
    implementation 'com.suddenh4x.ratingdialog:awesome-app-rating:2.4.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = 'com.pivotmaster'
                artifactId = 'premium'
                version = getVersion()
            }
        }
    }
}

def getVersion() {
    def branchName = getBranchName()
    def version = "1.0.7"

    if (branchName == "develop") {
        def dateFormat = new SimpleDateFormat('yyyyMMddHHmmss')
        def timestamp = dateFormat.format(new Date())
        version += "-SNAPSHOT-${timestamp}"
    }

    return version
}

def getBranchName() {
    def branch = "UNKNOWN"
    def branchEnv = System.getenv("BRANCH_NAME")

    if (branchEnv != null && !branchEnv.isEmpty()) {
        branch = branchEnv
    } else if (project.hasProperty("gitBranch")) {
        branch = project.gitBranch
    }

    return branch
}